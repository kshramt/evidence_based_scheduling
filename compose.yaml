services:
  api_v2:
    depends_on:
      postgres_migration:
        condition: service_completed_successfully
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://app:${_POSTGRES_APP_USER_PASSWORD?}@postgres/postgres
      RUST_LOG: trace
  nginx:
    restart: unless-stopped
  envoy:
    restart: unless-stopped
    depends_on:
      - api_v2
      - nginx
    ports:
      - "${ENVOY_HTTP_PORT:-8080}:8080"
      - "${ENVOY_GRPC_PORT:-50051}:50051"
  postgres:
    command:
      - -c
      - logging_collector=on
      - -c
      - log_line_prefix='[%t]%u %d %p[%l]'
      - -c
      - log_min_duration_statement=5000
    restart: unless-stopped
    environment:
      LANG: C.UTF-8
      POSTGRES_PASSWORD: ${_POSTGRES_PASSWORD?}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${MY_HOST_PGDATA:-./pgdata}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres_migration:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      CI: ${CI:-}
      _POSTGRES_APP_USER_PASSWORD: ${_POSTGRES_APP_USER_PASSWORD?}
      URL: postgresql://postgres:${_POSTGRES_PASSWORD?}@postgres:5432/postgres?sslmode=disable
# volumes:
#   pgdata:
