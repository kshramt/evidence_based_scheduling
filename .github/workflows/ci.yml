name: ci
on: [push]
jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
    - id: vars
      run: |
        echo ::set-output name=ref-b64::"$(echo "${{ github.ref }}" | base64 --wrap 0 | sed -e 's/=//g')"
        echo ::set-output name=tmp-dir::"$(mktemp -d)"
    - uses: actions/checkout@v3
    - uses: docker/setup-buildx-action@v2
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - run: docker buildx build . --target merger --cache-from type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache:${{ steps.vars.outputs.ref-b64 }} --cache-to type=local,dest=${{ steps.vars.outputs.tmp-dir }},mode=max
    - run: docker buildx build . --target merger --cache-from type=local,src=${{ steps.vars.outputs.tmp-dir }} --cache-to type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache:${{ steps.vars.outputs.ref-b64 }},mode=max
    - run: docker buildx build . -t ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} --target test_api --push --cache-from type=local,src=${{ steps.vars.outputs.tmp-dir }}
    - run: docker buildx build . -t ghcr.io/kshramt/evidence_based_scheduling/test_client:${{ github.sha }} --target test_client --push --cache-from type=local,src=${{ steps.vars.outputs.tmp-dir }}
    - run: docker buildx build . -t ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }} --target prod --push --cache-from type=local,src=${{ steps.vars.outputs.tmp-dir }}
  test-api:
    needs: [build-images]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} .venv/bin/python3 -m pyflakes api
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} .venv/bin/python3 -m mypy --check-untyped-defs api
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} .venv/bin/python3 -m black --check api
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} .venv/bin/python3 -m isort --check-only api
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }} .venv/bin/python3 -m pytest
  test-client:
    needs: [build-images]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_client:${{ github.sha }} node_modules/.bin/react-scripts test --ci --watchAll false
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_client:${{ github.sha }} node_modules/.bin/eslint --max-warnings 0 src
    - run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_client:${{ github.sha }} node_modules/.bin/prettier --check src
  tag-latest-tag:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test-client, test-api]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker pull ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}
      - run: docker tag ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }} ghcr.io/kshramt/evidence_based_scheduling:latest
      - run: docker push ghcr.io/kshramt/evidence_based_scheduling:latest
