name: ci
on: [push]
jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      ref-b64: ${{ steps.vars.outputs.ref-b64 }}
      tmp-dir: ${{ steps.vars.outputs.tmp-dir }}
      host-arch: ${{ steps.vars.outputs.host-arch }}
      host-os: ${{ steps.vars.outputs.host-os }}
    steps:
    - run: |
        echo I ::set-output name=ref-b64::"$(echo "${{ github.ref }}" | base64 --wrap 0 | sed -e 's/=//g')"
        echo I ::set-output name=tmp-dir::"$(mktemp -d)"
        echo I ::set-output name=host-arch::"$(docker version --format '{{ (index .Server.Components 0).Details.Arch }}')"
        echo I ::set-output name=host-os::"$(docker version --format '{{ (index .Server.Components 0).Details.Os }}')"
    - id: vars
      run: |
        echo ::set-output name=ref-b64::"$(echo "${{ github.ref }}" | base64 --wrap 0 | sed -e 's/=//g')"
        echo ::set-output name=tmp-dir::"$(mktemp -d)"
        echo ::set-output name=host-arch::"$(docker version --format '{{ (index .Server.Components 0).Details.Arch }}')"
        echo ::set-output name=host-os::"$(docker version --format '{{ (index .Server.Components 0).Details.Os }}')"
  build-images:
    needs: [set-vars]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - run: python3 bake.py --sha=${{ github.sha }} --ref_b64=${{ needs.set-vars.outputs.ref-b64 }} | tee bake.json
    - run: docker buildx bake --file bake.json ${{ matrix.os }}-${{ matrix.arch }}
    #
    - if: ${{ matrix.os == needs.set-vars.outputs.host-os && matrix.arch == needs.set-vars.outputs.host-arch }}
      run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_api:${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }} scripts/check.sh
    #
    - if: ${{ matrix.os == needs.set-vars.outputs.host-os && matrix.arch == needs.set-vars.outputs.host-arch}}
      run: docker run ghcr.io/kshramt/evidence_based_scheduling/test_client:${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }} scripts/check.sh
    #
    - if: ${{ matrix.os == needs.set-vars.outputs.host-os && matrix.arch == needs.set-vars.outputs.host-arch }}
      run: docker run -d -e USE_LITESTREAM=no -p8080:8080 ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}
    - if: ${{ matrix.os == needs.set-vars.outputs.host-os && matrix.arch == needs.set-vars.outputs.host-arch }}
      run: |
        set -xv
        set -o nounset
        set -o errexit
        set -o pipefail
        set -o noclobber
        i=0
        for _i in {1..100}; do
          if curl localhost:8080/healthz; then
            break;
          fi
          (( ++i ))
          sleep 0.1
        done
        if [[ $i -ge 100 ]]; then
            exit 1
        fi
    #
    - run: docker push ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}
    - if: ${{ github.ref == 'refs/heads/main' }}
      run: docker tag ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }} ghcr.io/kshramt/evidence_based_scheduling:latest-${{ matrix.os }}-${{ matrix.arch }}
    - if: ${{ github.ref == 'refs/heads/main' }}
      run: docker push ghcr.io/kshramt/evidence_based_scheduling:latest-${{ matrix.os }}-${{ matrix.arch }}
  build-manifests:
    needs: [build-images]
    runs-on: ubuntu-latest
    steps:
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - run: docker manifest create ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}{,-linux-{amd64,arm64}}
    - run: docker manifest push ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}
    - if: ${{ github.ref == 'refs/heads/main' }}
      run: docker manifest create ghcr.io/kshramt/evidence_based_scheduling:{latest,${{ github.sha }}-linux-{amd64,arm64}}
    - if: ${{ github.ref == 'refs/heads/main' }}
      run: docker manifest push ghcr.io/kshramt/evidence_based_scheduling:latest
