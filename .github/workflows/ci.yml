name: ci
on: [push]
jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      ref-b64: ${{ steps.vars.outputs.ref-b64 }}
      tmp-dir: ${{ steps.vars.outputs.tmp-dir }}
      host-arch: ${{ steps.vars.outputs.host-arch }}
      host-os: ${{ steps.vars.outputs.host-os }}
    steps:
      - id: vars
        run: |
          set -xv
          set -o errexit
          set -o pipefail
          {
          echo "ref-b64=$(echo "${{ github.ref }}" | base64 --wrap 0 | sed -e 's/[-=/]/_/g')"
          echo "tmp-dir=$(mktemp -d)"
          echo "host-arch=$(docker version --format '{{ (index .Server.Components 0).Details.Arch }}')"
          echo "host-os=$(docker version --format '{{ (index .Server.Components 0).Details.Os }}')"
          } >> "$GITHUB_OUTPUT"
  bazel:
    if: github.actor == 'dependabot[bot]' || github.actor == github.repository_owner
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE', 'WORKSPACE.bazel', 'MODULE.bazel') }}
          restore-keys: |
            ${{ runner.os }}-bazel-
      - run: EMBED_LABEL="git-${{ github.sha }}" scripts/bazel.sh
      - run: EMBED_LABEL="latest" scripts/bazel.sh
        if: github.ref == 'refs/heads/main'
  build-images:
    if: github.actor == 'dependabot[bot]' || github.actor == github.repository_owner
    permissions:
      contents: read
      packages: write
    needs: [set-vars]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]
        arch: [amd64]
        # arch: [amd64, arm64]
    steps:
      # - name: Free up space
      #   run: sudo rm -fr /opt/ghc /usr/share/dotnet /usr/local/lib/android || true
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/build_test_push.sh ${{ github.sha }} ${{ needs.set-vars.outputs.ref-b64 }} ${{ matrix.os }} ${{ matrix.arch }} ${{ github.ref }} ${{ github.run_number }} ${{ needs.set-vars.outputs.host-arch }} ${{ needs.set-vars.outputs.host-os }}
  build-manifests:
    if: github.actor == 'dependabot[bot]' || github.actor == github.repository_owner
    permissions:
      contents: read
      packages: write
    needs: [build-images]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: scripts/publish_manifests.sh ${{ github.sha }} ${{ github.ref }} ${{ github.run_number }}
