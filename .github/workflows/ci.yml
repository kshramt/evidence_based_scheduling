name: ci
on: [push]
jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      ref-b64: ${{ steps.git.outputs.ref-b64 }}
    steps:
    - id: git
      run: |
        echo ::set-output name=ref-b64::"$(echo "${{ github.ref }}" | base64 --wrap 0 | sed -e 's/=//g')"
  build-test-api:
    needs: [set-vars]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - run: docker buildx build . -t build-test-api:latest --target test_builder_api --load --cache-from type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache/build-test-api:${{ needs.set-vars.outputs.ref-b64 }} --cache-to type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache/build-test-api:${{ needs.set-vars.outputs.ref-b64 }},mode=max
      - run: docker run build-test-api:latest .venv/bin/python3 -m pyflakes api
      - run: docker run build-test-api:latest .venv/bin/python3 -m mypy --check-untyped-defs api
      - run: docker run build-test-api:latest .venv/bin/python3 -m black --check api
      - run: docker run build-test-api:latest .venv/bin/python3 -m isort --check-only api
      - run: docker run build-test-api:latest .venv/bin/python3 -m pytest
  build-test-client:
    needs: [set-vars]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - run: docker buildx build . -t build-test-client:latest --target test_builder_client --load --cache-from type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache/build-test-client:${{ needs.set-vars.outputs.ref-b64 }} --cache-to type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache/build-test-client:${{ needs.set-vars.outputs.ref-b64 }},mode=max
      - run: docker run build-test-client:latest node_modules/.bin/react-scripts test --ci --watchAll false
      - run: docker run build-test-client:latest node_modules/.bin/eslint --max-warnings 0 src
      - run: docker run build-test-client:latest node_modules/.bin/prettier --check src
  build-prod-git-sha-tag:
    needs: [build-test-api, build-test-client, set-vars]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          push: true
          target: prod
          tags: ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache:${{ needs.set-vars.outputs.ref-b64 }}
          cache-to: type=registry,ref=ghcr.io/kshramt/evidence_based_scheduling/cache:${{ needs.set-vars.outputs.ref-b64 }},mode=max
  build-prod-latest-tag:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build-prod-git-sha-tag]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker pull ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }}
      - run: docker tag ghcr.io/kshramt/evidence_based_scheduling:${{ github.sha }} ghcr.io/kshramt/evidence_based_scheduling:latest
      - run: docker push ghcr.io/kshramt/evidence_based_scheduling:latest
